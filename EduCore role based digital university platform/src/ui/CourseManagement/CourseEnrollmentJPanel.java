/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.CourseManagement;

// Import new model classes
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Course;
import model.Faculty;
import model.directory.CourseDirectory;


/**
 *
 * @author zenishborad
 */
public class CourseEnrollmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CourseEnrollmentJPanel
     */
    private JPanel workArea;
    private Faculty loggedInFaculty;
    private CourseDirectory courseDirectory;
    private ArrayList<Course> facultyCourses; // To store courses for combo box/table

    // New constructor
    public CourseEnrollmentJPanel(JPanel workArea, Faculty loggedInFaculty, CourseDirectory courseDirectory) {
        this.workArea = workArea;
        this.loggedInFaculty = loggedInFaculty;
        this.courseDirectory = courseDirectory;
        this.facultyCourses = new ArrayList<>();
        initComponents();
        populateCourseComboBox(); // Populate combo box first
        populateCourseTable();    // Then populate table
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnrollmentStatus = new javax.swing.JTable();
        lblSelectCourse = new javax.swing.JLabel();
        cmbSelectCourse = new javax.swing.JComboBox<>();
        btnOpenEnrollment = new javax.swing.JButton();
        btnClosedEnrollment = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        tblEnrollmentStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course Code", "Title", "Capacity", "Status", "Schedule"
            }
        ));
        jScrollPane1.setViewportView(tblEnrollmentStatus);

        lblSelectCourse.setText("Select Course");

        cmbSelectCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnOpenEnrollment.setText("Open Enrollment");
        btnOpenEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenEnrollmentActionPerformed(evt);
            }
        });

        btnClosedEnrollment.setText("Closed Enrollment");
        btnClosedEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClosedEnrollmentActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(lblSelectCourse)
                        .addGap(34, 34, 34)
                        .addComponent(cmbSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(btnOpenEnrollment)
                        .addGap(173, 173, 173)
                        .addComponent(btnClosedEnrollment)))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCourse)
                    .addComponent(cmbSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpenEnrollment, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClosedEnrollment, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(btnBack))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenEnrollmentActionPerformed
        // TODO add your handling code here:
          updateEnrollmentStatus(true);
    

    }//GEN-LAST:event_btnOpenEnrollmentActionPerformed

    private void btnClosedEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClosedEnrollmentActionPerformed
        // TODO add your handling code here:
         updateEnrollmentStatus(false);

    }//GEN-LAST:event_btnClosedEnrollmentActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:                                       
    workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);

         
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClosedEnrollment;
    private javax.swing.JButton btnOpenEnrollment;
    private javax.swing.JComboBox<String> cmbSelectCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectCourse;
    private javax.swing.JTable tblEnrollmentStatus;
    // End of variables declaration//GEN-END:variables

 private void updateEnrollmentStatus(boolean openStatus) {
        int selectedIndex = cmbSelectCourse.getSelectedIndex();
        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a course from the dropdown.");
            return;
        }

        // Get the selected Course object from our list
        Course selectedCourse = facultyCourses.get(selectedIndex);
        selectedCourse.setEnrollmentOpen(openStatus);

        // Refresh the table to show the updated status
        populateCourseTable();
        JOptionPane.showMessageDialog(this, "Enrollment status updated for " + selectedCourse.getTitle() + ".");
    }
private void populateCourseComboBox() {
        cmbSelectCourse.removeAllItems();
        facultyCourses.clear(); // Clear the list

        // Filter for courses taught by this faculty
        for (Course course : courseDirectory.getCourses()) {
            if (course.getFaculty() != null && course.getFaculty().getUniversityId().equals(loggedInFaculty.getUniversityId())) {
                facultyCourses.add(course); // Add the Course object
                cmbSelectCourse.addItem(course.toString()); // Add string representation
            }
        }
    }

    private void populateCourseTable() {
        DefaultTableModel model = (DefaultTableModel) tblEnrollmentStatus.getModel();
        model.setRowCount(0);

        // Use the same facultyCourses list populated by the combo box method
        for (Course course : facultyCourses) {
            Object[] row = new Object[4];
            row[0] = course.getCourseId();
            row[1] = course.getTitle();
            row[2] = course.getCapacity();
            row[3] = course.isEnrollmentOpen() ? "Open" : "Closed"; // Display status
            model.addRow(row);
        }
    }
  

}