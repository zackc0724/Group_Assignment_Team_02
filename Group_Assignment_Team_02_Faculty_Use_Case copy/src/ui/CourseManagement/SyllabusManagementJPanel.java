/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.CourseManagement;

import info5100.university.example.CourseCatalog.Course;
import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.Persona.Faculty.FacultyAssignment;
import info5100.university.example.Persona.Faculty.FacultyProfile;


/**
 *
 * @author zenishborad
 */
public class SyllabusManagementJPanel extends javax.swing.JPanel {
    private FacultyProfile facultyProfile;


    /**
     * Creates new form SyllabusManagementJPanel
     */
   public SyllabusManagementJPanel(FacultyProfile fp) {
    this.facultyProfile = fp;
    initComponents();
    populateCourseComboBox();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCourse = new javax.swing.JLabel();
        cmbCourseName = new javax.swing.JComboBox<>();
        lblCurrentSyllabus = new javax.swing.JLabel();
        btnUploadNewSyllabus = new javax.swing.JButton();
        btnViewSyllabus = new javax.swing.JButton();
        txtSyllabusName = new javax.swing.JTextField();
        pgbUploadStatus = new javax.swing.JProgressBar();
        lblUploadStatus = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        lblCourse.setText("Select Course");

        cmbCourseName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCurrentSyllabus.setText("Current Syllabus :");

        btnUploadNewSyllabus.setText("Upload New Syllabus");
        btnUploadNewSyllabus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadNewSyllabusActionPerformed(evt);
            }
        });

        btnViewSyllabus.setText("View Syllabus");
        btnViewSyllabus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSyllabusActionPerformed(evt);
            }
        });

        lblUploadStatus.setText("Upload Status");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnUploadNewSyllabus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(btnViewSyllabus)
                .addGap(101, 101, 101))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCurrentSyllabus)
                                .addGap(18, 18, 18)
                                .addComponent(txtSyllabusName))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCourse)
                                .addGap(37, 37, 37)
                                .addComponent(cmbCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(lblUploadStatus)
                        .addGap(60, 60, 60)
                        .addComponent(pgbUploadStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourse)
                    .addComponent(cmbCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentSyllabus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSyllabusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUploadNewSyllabus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewSyllabus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUploadStatus, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pgbUploadStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(179, 179, 179)
                .addComponent(btnBack))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadNewSyllabusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadNewSyllabusActionPerformed
        // TODO add your handling code here:                                                    
    int selectedIndex = cmbCourseName.getSelectedIndex();
    if (selectedIndex < 0) return;

    CourseOffer co = facultyProfile.getFacultyAssignments().get(selectedIndex).getCourseOffer();

    if (co != null) {
        String newSyllabus = txtSyllabusName.getText().trim();
        if (!newSyllabus.isEmpty()) {
            co.setSyllabusName(newSyllabus);

            // Optional: update progress bar
            pgbUploadStatus.setValue(100);
            lblUploadStatus.setText("Syllabus uploaded successfully!");
        } else {
            lblUploadStatus.setText("Enter syllabus name to upload");
        }
    }

    }//GEN-LAST:event_btnUploadNewSyllabusActionPerformed

    private void btnViewSyllabusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSyllabusActionPerformed
        // TODO add your handling code here:                                               
    int selectedIndex = cmbCourseName.getSelectedIndex();
    if (selectedIndex < 0) return; // nothing selected

    CourseOffer co = facultyProfile.getFacultyAssignments().get(selectedIndex).getCourseOffer();

    if (co != null && co.getSyllabusName() != null) {
        txtSyllabusName.setText(co.getSyllabusName());
    } else {
        txtSyllabusName.setText("No syllabus uploaded yet");
    }


    }//GEN-LAST:event_btnViewSyllabusActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUploadNewSyllabus;
    private javax.swing.JButton btnViewSyllabus;
    private javax.swing.JComboBox<String> cmbCourseName;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblCurrentSyllabus;
    private javax.swing.JLabel lblUploadStatus;
    private javax.swing.JProgressBar pgbUploadStatus;
    private javax.swing.JTextField txtSyllabusName;
    // End of variables declaration//GEN-END:variables

  private void populateCourseComboBox() {
    cmbCourseName.removeAllItems();
    for (FacultyAssignment fa : facultyProfile.getFacultyAssignments()) {
        CourseOffer co = fa.getCourseOffer();
        if (co != null && co.getSubjectCourse() != null) {
            cmbCourseName.addItem(co.getSubjectCourse().getCourseName());
        }
    }
}

}




