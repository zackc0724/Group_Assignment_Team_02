/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.CourseManagement;

import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.Persona.Faculty.FacultyProfile;
import java.awt.CardLayout;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zenishborad
 */
public class CourseEnrollmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CourseEnrollmentJPanel
     */
    private FacultyProfile facultyProfile;

 public CourseEnrollmentJPanel(FacultyProfile fp) {
        if (fp == null) {
            throw new IllegalArgumentException("FacultyProfile cannot be null");
        }
        this.facultyProfile = fp;
        initComponents();
        populateCourseComboBox();
        populateCourseTable();
}

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnrollmentStatus = new javax.swing.JTable();
        lblSelectCourse = new javax.swing.JLabel();
        cmbSelectCourse = new javax.swing.JComboBox<>();
        btnOpenEnrollment = new javax.swing.JButton();
        btnClosedEnrollment = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        tblEnrollmentStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course Code", "Title", "Capacity", "Status", "Schedule"
            }
        ));
        jScrollPane1.setViewportView(tblEnrollmentStatus);

        lblSelectCourse.setText("Select Course");

        cmbSelectCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnOpenEnrollment.setText("Open Enrollment");
        btnOpenEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenEnrollmentActionPerformed(evt);
            }
        });

        btnClosedEnrollment.setText("Closed Enrollment");
        btnClosedEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClosedEnrollmentActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(lblSelectCourse)
                        .addGap(34, 34, 34)
                        .addComponent(cmbSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(btnOpenEnrollment)
                        .addGap(173, 173, 173)
                        .addComponent(btnClosedEnrollment)))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCourse)
                    .addComponent(cmbSelectCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpenEnrollment, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClosedEnrollment, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(btnBack))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenEnrollmentActionPerformed
        // TODO add your handling code here:
          int index = cmbSelectCourse.getSelectedIndex();
    if (index >= 0) {
        CourseOffer co = facultyProfile.getAssignedCourses().get(index);
        co.setEnrollmentOpen(true); // open enrollment
        populateCourseTable(); // refresh table
    }

    }//GEN-LAST:event_btnOpenEnrollmentActionPerformed

    private void btnClosedEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClosedEnrollmentActionPerformed
        // TODO add your handling code here:
         int index = cmbSelectCourse.getSelectedIndex();
    if (index >= 0) {
        CourseOffer co = facultyProfile.getAssignedCourses().get(index);
        co.setEnrollmentOpen(false); // close enrollment
        populateCourseTable(); // refresh table
    }

    }//GEN-LAST:event_btnClosedEnrollmentActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:                                       
    this.setVisible(false);

         
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClosedEnrollment;
    private javax.swing.JButton btnOpenEnrollment;
    private javax.swing.JComboBox<String> cmbSelectCourse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSelectCourse;
    private javax.swing.JTable tblEnrollmentStatus;
    // End of variables declaration//GEN-END:variables

  private void populateCourseComboBox() {
    cmbSelectCourse.removeAllItems();
    for (CourseOffer co : facultyProfile.getAssignedCourses()) {
        cmbSelectCourse.addItem(co.getSubjectCourse().getCOurseNumber() + " - " + co.getSubjectCourse().getCourseName());
    }
}



    private void populateCourseTable() {
    DefaultTableModel model = (DefaultTableModel) tblEnrollmentStatus.getModel();
    model.setRowCount(0);

    for (CourseOffer co : facultyProfile.getAssignedCourses()) {
        String courseCode = co.getSubjectCourse().getCOurseNumber();
        String title = co.getSubjectCourse().getCourseName();
        int capacity = co.getCapacity();
        String status = co.isEnrollmentOpen() ? "Open" : "Closed";
        String schedule = "Not Assigned";

        model.addRow(new Object[]{courseCode, title, capacity, status, schedule});
    }
}

  

}