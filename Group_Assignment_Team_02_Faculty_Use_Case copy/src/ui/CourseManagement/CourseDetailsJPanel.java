/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.CourseManagement;

import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.Persona.Faculty.FacultyProfile;
import java.awt.CardLayout;
import ui.FacultyJPanel;

/**
 *
 * @author zenishborad
 */
public class CourseDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CourseDetailsJPanel
     */
    private javax.swing.JPanel workArea;

private FacultyProfile faculty;

public CourseDetailsJPanel(javax.swing.JPanel workArea, FacultyProfile faculty) {
    this.workArea = workArea;
    initComponents();
    populateScheduleComboBox();
    populateCourseTable(faculty); // pass logged-in faculty
}


    public CourseDetailsJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseDetails = new javax.swing.JTable();
        lblCourseCode = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtarDescription = new javax.swing.JTextArea();
        txtCourseCode = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        lblSchedule = new javax.swing.JLabel();
        lblCapacity = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        cmbSchedule = new javax.swing.JComboBox<>();
        sprCapacity = new javax.swing.JSpinner();
        btnBack = new javax.swing.JButton();

        tblCourseDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course Code", "Title", "Schedule", "Capacity"
            }
        ));
        jScrollPane1.setViewportView(tblCourseDetails);

        lblCourseCode.setText("Course Code");

        lblTitle.setText("Title");

        lblDescription.setText("Description");

        txtarDescription.setColumns(20);
        txtarDescription.setRows(5);
        jScrollPane2.setViewportView(txtarDescription);

        lblSchedule.setText("Schedule");

        lblCapacity.setText("Capacity");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        cmbSchedule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(83, 83, 83)
                        .addComponent(btnUpdate)
                        .addGap(110, 110, 110)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(btnClear))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescription)
                                    .addComponent(lblCourseCode)
                                    .addComponent(lblTitle)
                                    .addComponent(lblSchedule)
                                    .addComponent(lblCapacity))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCourseCode)
                                    .addComponent(txtTitle)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                                    .addComponent(sprCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbSchedule, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnBack))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseCode)
                    .addComponent(txtCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSchedule)
                    .addComponent(cmbSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCapacity)
                    .addComponent(sprCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:                                     
    // Step 1: Read values from input fields
    String courseCode = txtCourseCode.getText();
    String title = txtTitle.getText();
    String description = txtarDescription.getText();
    String schedule = (String) cmbSchedule.getSelectedItem();
    int capacity = (Integer) sprCapacity.getValue();

    // Step 2: Simple validation
    if(courseCode.isEmpty() || title.isEmpty() || description.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please fill all fields.");
        return;
    }

    // Step 3: Add values to table
    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblCourseDetails.getModel();
    model.addRow(new Object[]{courseCode, title, schedule, capacity});

    // Step 4: Optional: clear input fields
    txtCourseCode.setText("");
    txtTitle.setText("");
    txtarDescription.setText("");
    cmbSchedule.setSelectedIndex(0);
    sprCapacity.setValue(0);

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCourseDetails.getSelectedRow();
    if (selectedRow < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a row to update.");
        return;
    }

    String courseCode = txtCourseCode.getText();
    String title = txtTitle.getText();
    String description = txtarDescription.getText();
    String schedule = (String) cmbSchedule.getSelectedItem();
    int capacity = (Integer) sprCapacity.getValue();

    if(courseCode.isEmpty() || title.isEmpty() || description.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please fill all fields.");
        return;
    }

    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblCourseDetails.getModel();
    model.setValueAt(courseCode, selectedRow, 0);
    model.setValueAt(title, selectedRow, 1);
    model.setValueAt(schedule, selectedRow, 2);
    model.setValueAt(capacity, selectedRow, 3);

    javax.swing.JOptionPane.showMessageDialog(this, "Course updated successfully!");

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblCourseDetails.getSelectedRow();
    if (selectedRow < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        return;
    }

    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblCourseDetails.getModel();
    model.removeRow(selectedRow);

    javax.swing.JOptionPane.showMessageDialog(this, "Course deleted successfully!");

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtCourseCode.setText("");
    txtTitle.setText("");
    txtarDescription.setText("");
    cmbSchedule.setSelectedIndex(0);
    sprCapacity.setValue(0);

    // Optional: deselect table row
    tblCourseDetails.clearSelection();

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbSchedule;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCourseCode;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblSchedule;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JSpinner sprCapacity;
    private javax.swing.JTable tblCourseDetails;
    private javax.swing.JTextField txtCourseCode;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextArea txtarDescription;
    // End of variables declaration//GEN-END:variables

   private void populateScheduleComboBox() {
    cmbSchedule.removeAllItems(); // clear any default "Item 1, Item 2" etc.

    // Add your schedules
    cmbSchedule.addItem("Mon/Wed 10:00 - 11:30 AM");
    cmbSchedule.addItem("Tue/Thu 1:00 - 2:30 PM");
    cmbSchedule.addItem("Mon/Wed/Fri 9:00 - 10:00 AM");
    cmbSchedule.addItem("Tue/Thu 3:00 - 4:30 PM");
    cmbSchedule.addItem("Sat 10:00 AM - 12:00 PM");
}

 private void populateCourseTable(FacultyProfile faculty) {
    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tblCourseDetails.getModel();
    model.setRowCount(0); // clear table first

   for (CourseOffer co : faculty.getAssignedCourses()) {
    String courseCode = co.getSubjectCourse().getCOurseNumber(); // match exact method name
    String title = co.getSubjectCourse().getCourseName();
    String schedule = "Not Assigned"; // If you don’t have schedule in CourseOffer yet
    int capacity = co.getCapacity();

    model.addRow(new Object[]{courseCode, title, schedule, capacity});
}


 }
}

