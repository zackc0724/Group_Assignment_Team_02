/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.StudentManagement;

// Import necessary classes
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Course;
import model.Enrollment;
import model.Faculty;
import model.Student;
import model.directory.CourseDirectory;
import model.directory.EnrollmentDirectory;
import model.directory.PersonDirectory;

/**
 *
 * @author zenishborad
 */
public class StudentGradingJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    private Faculty loggedInFaculty;
    private CourseDirectory courseDirectory;
    private EnrollmentDirectory enrollmentDirectory;
    private PersonDirectory personDirectory;
    private ArrayList<Course> facultyCourses; // Courses for the course combo box
    private ArrayList<Enrollment> selectedCourseEnrollments; // Enrollments for the table
    private Enrollment selectedEnrollment = null; // Currently selected enrollment for grading

    /**
     * Creates new form StudentGradingJPanel (Refactored)
     */
    public StudentGradingJPanel(JPanel workArea, Faculty loggedInFaculty, CourseDirectory courseDirectory, EnrollmentDirectory enrollmentDirectory, PersonDirectory personDirectory) {
        this.workArea = workArea;
        this.loggedInFaculty = loggedInFaculty;
        this.courseDirectory = courseDirectory;
        this.enrollmentDirectory = enrollmentDirectory;
        this.personDirectory = personDirectory;
        this.facultyCourses = new ArrayList<>();
        this.selectedCourseEnrollments = new ArrayList<>();

        initComponents(); // Initialize NetBeans components first

        // Customize components after initComponents()
        setupComponents();

        populateCourseCombo(); // Populate courses

        // Add listener to update table when course selection changes
        cmbCourseSelect.addActionListener(e -> populateStudentTableForCourse());

        // Add listener to table to load selected student's grade
        tblStudentsAndGrades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });

        // Initially populate table for the first course (if any)
        populateStudentTableForCourse();
    }

    // Method to setup components not easily done in the designer
    private void setupComponents() {
        // Populate Grade ComboBox
        cmbGradeSelect.setModel(new DefaultComboBoxModel<>(new String[] {
            "In Progress", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "F"
        }));
        cmbGradeSelect.setEnabled(false); // Disable until a student is selected

        // Disable buttons that aren't implemented yet based on our simple model
        btnTotalPercentage.setEnabled(false);
        btnLetterGrade.setEnabled(false);
        btnRankStudents.setEnabled(false);
        txtTotalPercentage.setEditable(false);
        txtLetterGrade.setEditable(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentsAndGrades = new javax.swing.JTable();
        btnTotalPercentage = new javax.swing.JButton();
        btnUpdateGrade = new javax.swing.JButton();
        btnLetterGrade = new javax.swing.JButton();
        btnRankStudents = new javax.swing.JButton();
        lblTotalPercentage = new javax.swing.JLabel();
        lblLetterGrade = new javax.swing.JLabel();
        txtTotalPercentage = new javax.swing.JTextField();
        txtLetterGrade = new javax.swing.JTextField();
        lblCourseSelect = new javax.swing.JLabel();
        cmbCourseSelect = new javax.swing.JComboBox<>();
        lblSelectStudent = new javax.swing.JLabel();
        lblCurrentGrade = new javax.swing.JLabel();
        cmbGradeSelect = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        tblStudentsAndGrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Assignmennt", "Max Marks", "Marks Obtained", "Grade", "Weight %"
            }
        ));
        jScrollPane1.setViewportView(tblStudentsAndGrades);

        btnTotalPercentage.setText("Compute Total %");

        btnUpdateGrade.setText("Update Grade");
        btnUpdateGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateGradeActionPerformed(evt);
            }
        });

        btnLetterGrade.setText("Compute Letter Grade");

        btnRankStudents.setText("Rank Students");

        lblTotalPercentage.setText("Total %");

        lblLetterGrade.setText("Letter grade");

        lblCourseSelect.setText("Course select");

        cmbCourseSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblSelectStudent.setText("student selected");

        lblCurrentGrade.setText("current grade");

        cmbGradeSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(360, 360, 360)
                                .addComponent(btnRankStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                .addGap(74, 74, 74)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdateGrade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTotalPercentage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLetterGrade)
                        .addGap(80, 80, 80))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotalPercentage)
                            .addComponent(lblLetterGrade))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLetterGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSelectStudent)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCourseSelect)
                                    .addComponent(lblCurrentGrade))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbGradeSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbCourseSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 101, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(245, 245, 245))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTotalPercentage)
                    .addComponent(btnLetterGrade))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateGrade)
                    .addComponent(btnRankStudents))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalPercentage)
                    .addComponent(txtTotalPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCourseSelect)
                    .addComponent(cmbCourseSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblSelectStudent)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLetterGrade)
                    .addComponent(txtLetterGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentGrade)
                    .addComponent(cmbGradeSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateGradeActionPerformed
        // TODO add your handling code here:
        if (selectedEnrollment == null) {
            JOptionPane.showMessageDialog(this, "Please select a student from the table first.");
            return;
        }

        String selectedGrade = (String) cmbGradeSelect.getSelectedItem();
        if (selectedGrade == null) {
            JOptionPane.showMessageDialog(this, "Please select a grade from the dropdown.");
            return;
        }

        // Update the grade in the selected Enrollment object
        selectedEnrollment.setGrade(selectedGrade);

        // Refresh the table to show the new grade
        populateStudentTableForCourse();

        // Optionally clear selection and disable grade combo
        tblStudentsAndGrades.clearSelection();
        selectedEnrollment = null;
        cmbGradeSelect.setSelectedItem("In Progress");
        cmbGradeSelect.setEnabled(false);

        JOptionPane.showMessageDialog(this, "Grade updated successfully.");
    }//GEN-LAST:event_btnUpdateGradeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLetterGrade;
    private javax.swing.JButton btnRankStudents;
    private javax.swing.JButton btnTotalPercentage;
    private javax.swing.JButton btnUpdateGrade;
    private javax.swing.JComboBox<String> cmbCourseSelect;
    private javax.swing.JComboBox<String> cmbGradeSelect;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCourseSelect;
    private javax.swing.JLabel lblCurrentGrade;
    private javax.swing.JLabel lblLetterGrade;
    private javax.swing.JLabel lblSelectStudent;
    private javax.swing.JLabel lblTotalPercentage;
    private javax.swing.JTable tblStudentsAndGrades;
    private javax.swing.JTextField txtLetterGrade;
    private javax.swing.JTextField txtTotalPercentage;
    // End of variables declaration//GEN-END:variables
private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = tblStudentsAndGrades.getSelectedRow();
        if (selectedRow >= 0) {
            // Find the corresponding Enrollment object
            // We store the actual Enrollment object in the first column now
            selectedEnrollment = (Enrollment) tblStudentsAndGrades.getValueAt(selectedRow, 0);

            if (selectedEnrollment != null) {
                // Enable the grade combo box and set its value
                cmbGradeSelect.setEnabled(true);
                cmbGradeSelect.setSelectedItem(selectedEnrollment.getGrade());
            } else {
                 // Should not happen if table population is correct
                cmbGradeSelect.setEnabled(false);
                selectedEnrollment = null;
            }
        } else {
            cmbGradeSelect.setEnabled(false);
             selectedEnrollment = null;
        }
    }
private void populateCourseCombo() {
        cmbCourseSelect.removeAllItems();
        facultyCourses.clear();

        for (Course course : courseDirectory.getCourses()) {
            if (course.getFaculty() != null && course.getFaculty().getUniversityId().equals(loggedInFaculty.getUniversityId())) {
                facultyCourses.add(course);
                cmbCourseSelect.addItem(course.toString());
            }
        }
    }

    private void populateStudentTableForCourse() {
        DefaultTableModel model = (DefaultTableModel) tblStudentsAndGrades.getModel();
        model.setRowCount(0);
        selectedCourseEnrollments.clear(); // Clear the list of enrollments for the table
        selectedEnrollment = null; // Clear selected enrollment
        cmbGradeSelect.setEnabled(false); // Disable grade selection

        int selectedCourseIndex = cmbCourseSelect.getSelectedIndex();
        if (selectedCourseIndex < 0) {
            return; // No course selected
        }

        Course selectedCourse = facultyCourses.get(selectedCourseIndex);

        // Find enrollments for the selected course
        for (Enrollment enrollment : enrollmentDirectory.getEnrollments()) {
            if (enrollment.getCourse().getCourseId().equals(selectedCourse.getCourseId())) {
                selectedCourseEnrollments.add(enrollment); // Add to our list
                Student student = enrollment.getStudent();
                if (student != null) {
                    Object[] row = new Object[3];
                    row[0] = enrollment; // Store the Enrollment object itself
                    row[1] = student.getName();
                    row[2] = enrollment.getGrade(); // Display current grade
                    model.addRow(row);
                }
            }
        }
        
        // Custom renderer to display Student ID from Enrollment object in the first column
        tblStudentsAndGrades.getColumnModel().getColumn(0).setCellRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                if (value instanceof Enrollment) {
                    value = ((Enrollment) value).getStudent().getUniversityId();
                }
                return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            }
        });
    }
}
